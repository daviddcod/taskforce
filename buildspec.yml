version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.10
    commands:
      - echo "Installing dependencies and setting up the environment for taskforce"
      - pip install --upgrade pip
      - pip install virtualenv
      - virtualenv venv
      - . venv/bin/activate
      - pip install -r requirements.txt
      - pip install django-storages
      - pip install boto3
      - pip install psycopg2
      - pip install gunicorn
      - pip install django django-cors-headers
      - pip install mollie-api-python
      - pip install application


  pre_build:
    commands:
      - echo "Running pre-build commands for taskforce"
      - . venv/bin/activate
      - python manage.py check --deploy  # Check for deployment readiness
      - python manage.py migrate --settings=taskforce.settings --noinput  # Apply migrations
      - python manage.py collectstatic --settings=taskforce.settings --noinput --verbosity 0  # Collect static files

  build:
    commands:
      - echo "Executing build commands for taskforce"
      - . venv/bin/activate
      # Placeholder for additional build commands like testing

  post_build:
    commands:
      - echo "Post-build steps and clean-up for taskforce"
      - . venv/bin/activate
      - echo "Starting Gunicorn server"
      - gunicorn --daemon --workers 3 --bind unix:/tmp/nginx.socket taskforce.wsgi:application

artifacts:
  files:
    - '**/*'
  base-directory: 'venv'

cache:
  paths:
    - 'venv/**/*'

# Additional settings and optimizations for production
additional-cache:
  paths:
    - 'node_modules/**/*'  # Cache node modules if you're using any frontend frameworks

# Environment configuration
environment:
  variables:
    DJANGO_SETTINGS_MODULE: "taskforce.settings.production"  # Use production settings
    PYTHONPATH: "/var/app/current:$PYTHONPATH"
    # Securely retrieve these from a configuration service or environment variable
    AWS_ACCESS_KEY_ID: "AKIAZPFM3ISB4EG5U5JY"  
    AWS_SECRET_ACCESS_KEY: "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"
    AWS_STORAGE_BUCKET_NAME: "mediawdm"

# Elastic Beanstalk configuration
ebextensions:
  01_app.config:
    option_settings:
      aws:elasticbeanstalk:container:python:
        WSGIPath: taskforce.wsgi:application
      aws:elasticbeanstalk:environment:proxy:staticfiles:
        /static: "static"  # Adjust based on your static files path
      aws:elasticbeanstalk:application:environment:
        DJANGO_SETTINGS_MODULE: "taskforce.settings.production"
        PYTHONPATH: "/var/app/current:$PYTHONPATH"
    files:
      "/opt/elasticbeanstalk/hooks/appdeploy/pre/50_configure_wsgi.sh":
        mode: "000755"
        owner: root
        group: root
        content: |
          #!/bin/bash
          # Configure Gunicorn to run the application
          cd /var/app/current
          source /var/app/current/venv/bin/activate  # Activate the virtual environment
          gunicorn --daemon --workers 3 --bind unix:/tmp/nginx.socket taskforce.wsgi:application